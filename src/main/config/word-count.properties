# Application / Job
app.class=samzaapp.WordCount
job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=word-count
job.default.system=kafka


# YARN
yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz
# Split Number
app.split.number=3
## Stage resourcemanager declare
yarn.resourcemanager.address.stage0=localhost:8032
yarn.resourcemanager.address.stage1=localhost:8032
#yarn.resourcemanager.address.stage2=localhost:8032

## Serializers
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory

## debugger
##task.opts=-agentlib:jdwp=transport=dt_socket,address=localhost:9009,server=y,suspend=y
##
## Metrics
#metrics.reporters=snapshot,jmx
#metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
#metrics.reporter.snapshot.stream=kafka.metrics
#metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory
#metrics.reporter.snapshot.interval=5

#app.class=samzaapp.WordCount
#job.name=word-count
#job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
#job.changelog.system=kafka
##task.name.grouper.factory=org.apache.samza.container.grouper.task.SingleContainerGrouperFactory
#processor.id=0
#systems.kafka.default.stream.samza.offset.default=oldest
#job.coordinator.zk.connect=localhost:2181
#job.default.system=kafka
#app.split.number=2